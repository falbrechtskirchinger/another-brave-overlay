# SPDX-FileCopyrightText: Copyright 2025 Florian Albrechtskirchinger <falbrechtskirchinger@gmail.com>
#
# SPDX-License-Identifier: MIT

name: ðŸš€ Update Ebuilds

on:
  # Run every 2 hours
  schedule:
    - cron: '22 */2 * * *'
  workflow_dispatch:

jobs:
  update-ebuilds:
    name: "Update ebuilds"
    runs-on: ubuntu-latest
    outputs:
      new_ebuilds: ${{ steps.update-ebuilds.outputs.new_ebuilds }}
    permissions:
      # Required to push changes to repo
      contents: write

    steps:
      - name: Checkout your repository
        uses: actions/checkout@v4

      - name: Set git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Update ebuilds
        id: update-ebuilds
        run: |
          python scripts/update_ebuilds.py --commit
          git push

  debug-output:
    name: "Debug Output"
    runs-on: ubuntu-latest
    needs: update-ebuilds
    if: always()
    steps:
      - name: Dump the new_ebuilds output
        run: |
          echo "Received new_ebuilds output:"
          echo "${{ needs.update-ebuilds.outputs.new_ebuilds }}"

  test-ebuild-stable:
    name: "Test ebuild (stable)"
    needs: update-ebuilds
    if: needs.update-ebuilds.outputs.new_ebuilds != '' && fromJSON(needs.update-ebuilds.outputs.new_ebuilds).stable != ''
    uses: ./.github/workflows/test-ebuild.yml
    with:
      ebuild: ${{ fromJSON(needs.update-ebuilds.outputs.new_ebuilds).stable }}

  test-ebuild-beta:
    name: "Test ebuild (beta)"
    needs: update-ebuilds
    if: needs.update-ebuilds.outputs.new_ebuilds != '' && fromJSON(needs.update-ebuilds.outputs.new_ebuilds).beta != ''
    uses: ./.github/workflows/test-ebuild.yml
    with:
      ebuild: ${{ fromJSON(needs.update-ebuilds.outputs.new_ebuilds).beta }}

  test-ebuild-nightly:
    name: "Test ebuild (nightly)"
    needs: update-ebuilds
    if: needs.update-ebuilds.outputs.new_ebuilds != '' && fromJSON(needs.update-ebuilds.outputs.new_ebuilds).nightly != ''
    uses: ./.github/workflows/test-ebuild.yml
    with:
      ebuild: ${{ fromJSON(needs.update-ebuilds.outputs.new_ebuilds).nightly }}

  notify-on-failure:
    name: "Notify on failure"
    needs: [test-ebuild-stable, test-ebuild-beta, test-ebuild-nightly]
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send email if any test failed
        env:
          NEW_EBUILDS: ${{ needs.update-ebuilds.outputs.new_ebuilds }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
        run: |
          python scripts/notify_on_failure.py
